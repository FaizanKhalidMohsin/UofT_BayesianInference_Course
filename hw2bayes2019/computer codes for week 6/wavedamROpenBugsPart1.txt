#
#  Wave Damage Dataset
#  Michael Escobar 
#  Feb 10, 2018
#     Simple Poisson regression model.
#

 #WorkDir<- "c:/mike workstation/Bayescourse15/Examples/WaveDamage"
 # Note: change this to the file where everything is
 setwd(WorkDir)
  
 
 
library(R2OpenBUGS)


dat.desc=cat("
/*   
Data taken from page 204 of McCullagh Nelder (2nd ed)

The data was provided by J. Drilley and L.N. Hemingway of Lloyd's
Register of Shipping, concern a type of damage caused by waves to the forward 
section of certain cargo-carrying vessels.  For he purpose of setting standards for hull 
construction we need to know the risk of damage associated with the three
classifying factors show below:

column 1:  Ship type, 1-5
Column 2: Year of construction: 1=1960-64, 2=1965-69, 3=1970-74, 4=1975-79
Column 3: Period of operation: 1=1960-74, 2=1975-1979
Column 4: Aggregate months of service
Column 5: Numbero f reported damage incidents
*/", file="")

############  Data  ##################
cat(
"ship   yrcons   yrop  month daminc
1   1  1   127     0
1   1  2   63      0
1   2  1   1095    3
1   2  2   1095    4
1   3  1   1512    6
1   3  2   3353    18
1   4  2   2244    11
2   1  1  44882    39
2   1  2  17176    29
2   2  1  28609    58
2   2  2  20370    53
2   3  1   7064    12
2   3  2  13099    44
2   4  2   7117    18
3   1  1   1179    1
3   1  2    552    1
3   2  1    781    0
3   2  2    676    1
3   3  1    783    6
3   3  2   1948    2
3   4  2    274    1
4   1  1    251    0
4   1  2    105    0
4   2  1    288    0
4   2  2    192    0
4   3  1    349    2
4   3  2   1208    11
4   4  2   2051    4
5   1  1     45    0
5   2  1    789    7
5   2  2    437    7
5   3  1   1157    5
5   3  2   2161    12
5   4  2    542    1
", file="WaveDamDat.txt")



#########  model file  #####################
cat("
model{
for(i in 1:34)
{
#ship   yrcons   yrop  month daminc

daminc[i]~dpois(lam[i])
log(lam[i]) <- log(month[i]) + beta0 + beta.o*yrop[i] + beta.s[ship[i]]+ beta.c[yrcons[i]]  + b[i] 
b[i] ~dnorm(0,tau)
b.adj[i] <- b[i] - mean(b[]) 
}
for(is in 1:5){
beta.s[is]~dnorm(0,tau.s)
beta.s.adj[is] <- beta.s[is] -mean(beta.s[]) 
}
for(ic in 1:4){
beta.c[ic]~dnorm(0,tau.c)
beta.c.adj[ic] <- beta.c[ic] - mean(beta.c[])
}

# Using tigher priors
#  Note: total ship-years per categories is less than 50,000
#  ln(50000) ~ 2.3*4 + 1.6 = 10.8....
#  so rate has to be bigger than 1/50,000 and log(rate) > -10.8... 
#  so log( base rate) should be between about -11 and 11.
# 1/11/11 is about .0082
beta0 ~ dnorm(0, .0082)  
beta0.adj <- beta0 + mean(b[]) + mean(beta.s[])+ mean(beta.c[])


# for the <extra poisson variation> ... 
# assume bounded by very big number... say 1000 times... 
# so log(1000) is about 2.3*4 which is about 9.2
std ~ dunif(0, 9)
tau <- 1/std/std

# for the relative risk between groups... a very large number would be 100 times, 
#  so, log(100) is about 2.3*2 or about 4.6
#  also, note that 1/5/5 is 0.04
#  
std.s ~dunif(0, 5)
tau.s <- 1/std.s/std.s
std.c ~ dunif(0,5) 
tau.c <- 1/std.c/std.c

beta.o~dnorm(0, .04)

}", file="waveModCentered.txt")

params=c("beta.s.adj",  "std.s", "beta.c.adj", "std.c", "beta.o", "beta0.adj", "std")



 
WaveDamDat=read.table("WaveDamDat.txt",header=TRUE,sep = "")
attach(WaveDamDat)


bug.dat=list("ship","yrcons","yrop", "month","daminc")
init.fun=function(){list(
  beta.s=rnorm(5), std.s=runif(1,1,2),
  beta.c=rnorm(4), std.c=runif(1,1,2), 
  beta.o=rnorm(1), std=runif(1,1,2), beta0=rnorm(1),
  b=rnorm(34,0,.1))}


WaveBug0=bugs(bug.dat, init.fun, params, model.file="waveModCentered.txt",
    n.chains=5, n.iter=30000, n.burnin=10000, n.thin=5  #for production
#	n.chains=5, n.iter=2000, n.burnin=100, n.thin=1, debug=TRUE   #for testing
    )

print(WaveBug0, digits.summary = 3)



boxplot(data.frame( (WaveBug0$sims.list)["beta.s.adj"]), 
  xlab="beta.s.adj") ;xnul=locator(1)
  
boxplot(data.frame( (WaveBug0$sims.list)["beta.c.adj"]), 
   xlab="beta.c.adj") ;xnul=locator(1)


acf( WaveBug0$sims.array[,1,"beta.c.adj[1]"]) ;xnul=locator(1)
acf( WaveBug0$sims.array[,1,"beta.s.adj[1]"]) ;xnul=locator(1)
acf( WaveBug0$sims.array[,1,"beta0.adj"])  ;xnul=locator(1)
acf( WaveBug0$sims.array[,1,"beta.o"]);xnul=locator(1)



SArray= WaveBug0$sims.array
vname=attr(SArray,"dimnames")[3][[1]]
chainL=attr(SArray,"dim")[1][[1]]
for(i in 1:length(vname)){ 
    nn=vname[i]
    plot(density(SArray[,,nn]), main=nn)
    xnul=locator(1)
    acf( SArray[,1,nn], main=nn)  #note: this is only for 1st chain
    xnul=locator(1)
    matplot(1:chainL,SArray[,,nn], main=nn,xlab="index",type="l")
    xnul=locator(1)
    }
 
#####  Getting the output to include in a Latex document
 
pdf("BoxPlotBetaS.pdf",width=5, height=4, onefile=F) 
boxplot(data.frame( (WaveBugR$sims.list)["beta.s.adj"]), 
  xlab="beta.s.adj")
dev.off()

pdf("DensityPlotBetaS.pdf",width=5, height=4, onefile=F) 
plot(c(-2,1),c(0,3), type="n",main="beta.s.adj[2]")
apply(SArray[,,"beta.s.adj[2]"], 2, function(x)lines(density(x)))
dev.off()

pdf("ACFPlotBetaS.pdf",width=5, height=4, onefile=F) 
acf( SArray[,1,"beta.s.adj[2]"], main="beta.s.adj[2]")
dev.off()

pdf("TracePlotBetaS.pdf",width=5, height=4, onefile=F) 
matplot(1:chainL,SArray[,,"beta.s.adj[2]"], main="beta.s.adj[2]",xlab="index",type="l")
dev.off()



