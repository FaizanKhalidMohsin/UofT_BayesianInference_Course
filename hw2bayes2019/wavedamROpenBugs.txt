#
#  Wave Damage Dataset
#  Michael Escobar 
#  Feb 15, 2011
#     ----- look at using openbugs versus winbugs   -------------

 WorkDir<- "c:/mike workstation/Bayescourse10/Examples/WaveDamage"
 # Note: change this to the file where everything is
 setwd(WorkDir)
  
#  specify where the WinBugs files are:
#  WinDir="c:/Program Files/WinBUGS14/"
####WinDir="c:/MyProg/WinBugs14/"
 
 
 
library(R2OpenBUGS)
library(coda)

make.mcmc.list=function(x){
    aa=x$sims.array
    zz=list(list())
    for(i in 1:(dim(aa)[2]) ){
        tmp=mcmc(aa[,i,])
        zz=c(zz,list(tmp))   }
        res=mcmc.list(zz[-1])
        res}
 

##############  modified geweke.diag  #########
###########     called: geweke.diag.mod  ######

geweke.diag.mod=function (x, frac1 = 0.1, frac2 = 0.5) 
{
    if (is.mcmc.list(x)) 
        return(lapply(x, geweke.diag.mod, frac1, frac2))   ### changed line
    x <- as.mcmc(x)
    xstart <- c(start(x), end(x) - frac2 * (end(x) - start(x)))
    xend <- c(start(x) + frac1 * (end(x) - start(x)), end(x))
    y.variance <- y.mean <- vector("list", 2)
    for (i in 1:2) {
        y <- window(x, start = xstart[i], end = xend[i])
        y.mean[[i]] <- apply(as.matrix(y), 2, mean)
        y.variance[[i]] <- spectrum0.ar(y)$spec/niter(y) #### changed line
    }
    z <- (y.mean[[1]] - y.mean[[2]])/sqrt(y.variance[[1]] + y.variance[[2]])
    out <- list(z = z, frac = c(frac1, frac2))
    class(out) <- "geweke.diag"
    return(out)
}






dat.desc=cat("
/*   
Data taken from page 204 of McCullagh Nelder (2nd ed)

The data was provided by J. Drilley and L.N. Hemingway of Lloyd's
Register of Shipping, concern a type of damage caused by waves to the forward 
section of certain cargo-carrying vessels.  For he purpose of setting standards for hull 
construction we need to know the risk of damage associated with the three
classifying factors show below:

column 1:  Ship type, 1-5
Column 2: Year of construction: 1=1960-64, 2=1965-69, 3=1970-74, 4=1975-79
Column 3: Period of operation: 1=1960-74, 2=1975-1979
Column 4: Aggregate months of service
Column 5: Numbero f reported damage incidents
*/", file="")

#########  model file  #####################
cat("
model{
for(i in 1:34)
{
daminc[i]~dpois(lam[i])
log(lam[i]) <- log(month[i]) + beta.s[ship[i]]  + beta.c[yrcons[i]] + beta.o*(yrop[i]*2-3) + b[i]
b[i] ~dnorm(0,tau)
}

for(is in 1:5){
beta.s[is]~dnorm(mu.s,tau.s)
}
for(ic in 1:4){
beta.c[ic]~dnorm(0,tau.c)
}

beta.o~dnorm(0, .0001)
tau~dgamma(.0001,.0001)
mu.s~dnorm(0,.0001)
tau.s~dgamma(.0001,.0001)
tau.c~dgamma(.0001,.0001)

std<-1/sqrt(tau)
std.s<-1/sqrt(tau.s)
std.c<-1/sqrt(tau.c)
}", file="waveMod0.txt")

############  Data  ##################
cat(
"ship   yrcons   yrop  month daminc
1   1  1   127     0
1   1  2   63      0
1   2  1   1095    3
1   2  2   1095    4
1   3  1   1512    6
1   3  2   3353    18
1   4  2   2244    11
2   1  1  44882    39
2   1  2  17176    29
2   2  1  28609    58
2   2  2  20370    53
2   3  1   7064    12
2   3  2  13099    44
2   4  2   7117    18
3   1  1   1179    1
3   1  2    552    1
3   2  1    781    0
3   2  2    676    1
3   3  1    783    6
3   3  2   1948    2
3   4  2    274    1
4   1  1    251    0
4   1  2    105    0
4   2  1    288    0
4   2  2    192    0
4   3  1    349    2
4   3  2   1208    11
4   4  2   2051    4
5   1  1     45    0
5   2  1    789    7
5   2  2    437    7
5   3  1   1157    5
5   3  2   2161    12
5   4  2    542    1
", file="WaveDamDat.txt")


 
WaveDamDat=read.table("WaveDamDat.txt",header=TRUE,sep = "")
attach(WaveDamDat)


bug.dat=list("ship","yrcons","yrop", "month","daminc")
init.fun=function(){list(
  beta.s=rnorm(5), mu.s=rnorm(1), tau.s=rgamma(1,1,1),
  beta.c=rnorm(4), tau.c=rgamma(1,1,1), 
  beta.o=rnorm(1), tau=rgamma(1,1,1), 
  b=rnorm(34,0,.1))}

params=c("beta.s",  "mu.s", "std.s", "beta.c", "std.c", "beta.o")

WaveBug0=bugs(bug.dat, init.fun, params, model.file="waveMod0.txt",
    n.chains=5, n.iter=20000, n.burnin=10000,
    # bugs.directory=WinDir, 
    debug=TRUE,
    n.thin=1)

print(WaveBug0)



wave0=make.mcmc.list(WaveBug0)
summary(wave0)

   
gelman.diag(wave0)
geweke.diag(wave0)

batchSE(wave0)
effectiveSize(wave0)                                                   



boxplot(data.frame( (WaveBug0$sims.list)["beta.s"]), 
  xlab="beta.s") ;xnul=locator(1)
  
boxplot(data.frame( (WaveBug0$sims.list)["beta.c"]), 
   xlab="beta.c") ;xnul=locator(1)


acf( WaveBug0$sims.array[,1,"beta.c[1]"]) ;xnul=locator(1)
acf( WaveBug0$sims.array[,1,"beta.s[1]"]) ;xnul=locator(1)
acf( WaveBug0$sims.array[,1,"mu.s"])  ;xnul=locator(1)
acf( WaveBug0$sims.array[,1,"beta.o"]);xnul=locator(1)



SArray= WaveBug0$sims.array
vname=attr(SArray,"dimnames")[3][[1]]
chainL=attr(SArray,"dim")[1][[1]]
for(i in 1:length(vname)){ 
    nn=vname[i]
    plot(density(SArray[,,nn]), main=nn)
    xnul=locator(1)
    acf( SArray[,1,nn], main=nn)  #note: this is only for 1st chain
    xnul=locator(1)
    matplot(1:chainL,SArray[,,nn], main=nn,xlab="index",type="l")
    xnul=locator(1)
    }
 
 


#################  LTZ model   ################


#########  model file  #####################
cat("
model{
for(i in 1:34)
{
daminc[i]~dpois(lam[i])
log(lam[i]) <- log(month[i]) + beta.s[ship[i]]  + beta.c[yrcons[i]] + beta.o*(yrop[i]*2-3) + b[i]
b[i] ~dnorm(0,tau)
}

b0~dnorm(0,.0001)

beta.s[5]<-0
for(is in 1:4){
beta.s[is]~dnorm(mu.s,tau.s)
}
mu.s~dnorm(0,.001)

beta.c[4]<-0
for(ic in 1:3){
beta.c[ic]~dnorm(mu.c,tau.c)
}
mu.c~dnorm(0,.001)

beta.o~dnorm(0, .001)

tau<-1/std/std
tau.s<-1/std.s/std.s
tau.c<-1/std.c/std.c
std~dunif(0,20)
std.s~dunif(0,20)
std.c~dunif(0,20)
}", file="waveModLTZ.txt")



bug.dat=list("ship","yrcons","yrop", "month","daminc")
init.fun=function(){list(
  b0=rnorm(1),
  beta.s=c(rnorm(4),NA), mu.s=rnorm(1), std.s=runif(1,.5,2),
  beta.c=c(rnorm(3),NA), std.c=runif(1,.5,2),mu.c=rnorm(1), 
  beta.o=rnorm(1), std=runif(1,.5,2), 
  b=rnorm(34,0,1))}

params=c("b0", "std", "beta.s",  "mu.s", "std.s", "beta.c", "std.c", "beta.o")

WaveBugLTZ=bugs(bug.dat, init.fun, params, model.file="waveModLTZ.txt",
    n.chains=5, n.iter=25000, n.burnin=10000,
    n.thin=1#, bugs.directory=WinDir  #, debug=TRUE
        )

print(WaveBugLTZ)

 

waveLTZ=make.mcmc.list(WaveBugLTZ)
summary(waveLTZ)

   
gelman.diag(waveLTZ)
geweke.diag(waveLTZ)

batchSE(waveLTZ)
effectiveSize(waveLTZ)                                                   



boxplot(data.frame( (WaveBugLTZ$sims.list)["beta.s"]), 
  xlab="beta.s") ;xnul=locator(1)
  
boxplot(data.frame( (WaveBugLTZ$sims.list)["beta.c"]), 
   xlab="beta.c") ;xnul=locator(1)


acf( WaveBugLTZ$sims.array[,1,"beta.c[1]"]) ;xnul=locator(1)
acf( WaveBugLTZ$sims.array[,1,"beta.s[1]"]) ;xnul=locator(1)
acf( WaveBugLTZ$sims.array[,1,"mu.s"])  ;xnul=locator(1)
acf( WaveBugLTZ$sims.array[,1,"beta.o"]);xnul=locator(1)



SArray= WaveBugLTZ$sims.array
vname=attr(SArray,"dimnames")[3][[1]]
chainL=attr(SArray,"dim")[1][[1]]
for(i in 1:length(vname)){ 
    nn=vname[i]
    plot(density(SArray[,,nn]), main=nn)
    xnul=locator(1)
    acf( SArray[,1,nn], main=nn)  #note: this is only for 1st chain
    xnul=locator(1)
    matplot(1:chainL,SArray[,,nn], main=nn,xlab="index",type="l")
    xnul=locator(1)
    }
 

#################  LTZ0 model   ################


#########  model file  #####################
cat("
model{
for(i in 1:34)
{
daminc[i]~dpois(lam[i])
log(lam[i]) <- log(month[i]) +b0+ beta.s[ship[i]]  + beta.c[yrcons[i]] + beta.o*(yrop[i]*2-3) + b[i]
b[i] ~dnorm(0,tau)
}

b0~dnorm(0,.0001)

beta.s[5]<-0
for(is in 1:4){
beta.s[is]~dnorm(0,tau.s)
}
#mu.s~dnorm(0,.001)

beta.c[4]<-0
for(ic in 1:3){
beta.c[ic]~dnorm(0,tau.c)
}
#mu.c~dnorm(0,.001)

beta.o~dnorm(0, .001)

tau<-1/std/std
tau.s<-1/std.s/std.s
tau.c<-1/std.c/std.c
std~dunif(0,20)
std.s~dunif(0,20)
std.c~dunif(0,20)
}", file="waveModLTZ0.txt")



bug.dat=list("ship","yrcons","yrop", "month","daminc")
init.fun=function(){list(
  b0=rnorm(1),
  beta.s=c(rnorm(4),NA), #mu.s=rnorm(1), 
  std.s=runif(1,.5,2),
  beta.c=c(rnorm(3),NA), std.c=runif(1,.5,2), #mu.c=rnorm(1), 
  beta.o=rnorm(1), std=runif(1,.5,2), 
  b=rnorm(34,0,1))}

#params=c("b0", "std", "beta.s",  "mu.s", "std.s", "beta.c", "std.c", "beta.o")
params=c("b0", "std", "beta.s",  "std.s", "beta.c", "std.c", "beta.o")

WaveBugLTZ0=bugs(bug.dat, init.fun, params, model.file="waveModLTZ0.txt",
    n.chains=5, n.iter=25000, n.burnin=10000,
    # bugs.directory=WinDir,  
     debug=TRUE,
    n.thin=1    )

print(WaveBugLTZ0)

 

waveLTZ0=make.mcmc.list(WaveBugLTZ0)
summary(waveLTZ0)

   
gelman.diag(waveLTZ0)
geweke.diag(waveLTZ0)
geweke.diag.mod(waveLTZ0)

batchSE(waveLTZ0)
effectiveSize(waveLTZ0)                                                   



boxplot(data.frame( (WaveBugLTZ0$sims.list)["beta.s"]), 
  xlab="beta.s") ;xnul=locator(1)
  
boxplot(data.frame( (WaveBugLTZ0$sims.list)["beta.c"]), 
   xlab="beta.c") ;xnul=locator(1)


acf( WaveBugLTZ0$sims.array[,1,"beta.c[1]"]) ;xnul=locator(1)
acf( WaveBugLTZ0$sims.array[,1,"beta.s[1]"]) ;xnul=locator(1)
acf( WaveBugLTZ0$sims.array[,1,"mu.s"])  ;xnul=locator(1)
acf( WaveBugLTZ0$sims.array[,1,"beta.o"]);xnul=locator(1)

crosscorr.plot(waveLTZ0); xnul=locator(1)

SArray= WaveBugLTZ0$sims.array
vname=attr(SArray,"dimnames")[3][[1]]
chainL=attr(SArray,"dim")[1][[1]]
for(i in 1:length(vname)){ 
    nn=vname[i]
    plot(density(SArray[,,nn]), main=nn)
    xnul=locator(1)
    acf( SArray[,1,nn], main=nn)  #note: this is only for 1st chain
    xnul=locator(1)
    matplot(1:chainL,SArray[,,nn], main=nn,xlab="index",type="l")
    xnul=locator(1)
    }
 

#################  Redundant   ################


#########  model file  #####################
cat("
model{
for(i in 1:34)
{
daminc[i]~dpois(lam[i])
log(lam[i]) <- log(month[i]) +b0 + beta.s[ship[i]]  + beta.c[yrcons[i]] + beta.o*(yrop[i]*2-3) + b[i]
b[i] ~dnorm(0,tau)
b.adj[i]<-b[i]-mean(b[])
}

b0~dnorm(0,.001)
b0.adj<-b0+mean(b[])+mean(beta.s[])+mean(beta.c[])

for(is in 1:5){
beta.s[is]~dnorm(mu.s,tau.s)
beta.s.adj[is]<-beta.s[is]-mean(beta.s[])
}
mu.s~dnorm(0,.001)

for(ic in 1:4){
beta.c[ic]~dnorm(mu.c,tau.c)
beta.c.adj[ic]<-beta.c[ic]-mean(beta.c[])
}
mu.c~dnorm(0,.001)

beta.o~dnorm(0, .001)

tau<-1/std/std
tau.s<-1/std.s/std.s
tau.c<-1/std.c/std.c
std~dunif(0,20)
std.s~dunif(0,20)
std.c~dunif(0,20)
}", file="waveModR.txt")



bug.dat=list("ship","yrcons","yrop", "month","daminc")
init.fun=function(){list(
  beta.s=rnorm(5), mu.s=rnorm(1), std.s=runif(1,.5,2),
  beta.c=rnorm(4), std.c=runif(1,.5,2),mu.c=rnorm(1), 
  beta.o=rnorm(1), std=runif(1,.5,2), 
  b=rnorm(34,0,1), b0=rnorm(1) )}

params=c("beta.s.adj",  "std.s", "beta.c.adj", "std.c", "beta.o", "b0.adj")

WaveBugR=bugs(bug.dat, init.fun, params, model.file="waveModR.txt",
    n.chains=5, n.iter=15000, n.burnin=5000,
    # bugs.directory=WinDir,
    # debug=TRUE,
    n.thin=1    )


#######   look at some results and diagnostics  ######

print(WaveBugR)


waveR=make.mcmc.list(WaveBugR)
summary(waveR)

gelman.diag(waveR)
geweke.diag(waveR)
geweke.diag.mod(waveR)

batchSE(waveR)
effectiveSize(waveR)

crosscorr.plot(waveR); xnul=locator(1)


boxplot(data.frame( (WaveBugR$sims.list)["beta.s.adj"]), 
  xlab="beta.s.adj") ;xnul=locator(1)
  
boxplot(data.frame( (WaveBugR$sims.list)["beta.c.adj"]), 
   xlab="beta.c.adj") ;xnul=locator(1)


acf( WaveBugR$sims.array[,1,"beta.c.adj[1]"]) ;xnul=locator(1)
acf( WaveBugR$sims.array[,1,"beta.s.adj[1]"]) ;xnul=locator(1)
acf( WaveBugR$sims.array[,1,"beta.o"]);xnul=locator(1)



SArray= WaveBugR$sims.array
vname=attr(SArray,"dimnames")[3][[1]]
chainL=attr(SArray,"dim")[1][[1]]
for(i in 1:length(vname)){ 
    nn=vname[i]
    plot(density(SArray[,,nn]), main=nn)
    xnul=locator(1)
    acf( SArray[,1,nn], main=nn)
    xnul=locator(1)
    matplot(1:chainL,SArray[,,nn], main=nn,xlab="index",type="l")
    xnul=locator(1)
    }
 
plot(c(110,170), c(0,.05),type="n")
apply(SArray[,,"deviance"],2,function(x)lines(density(x)))
xnul=locator(1)

plot(c(-2,1),c(0,2), type="n",main="beta.c.adj[1]")
apply(SArray[,,"beta.c.adj[1]"], 2, function(x)lines(density(x)))
xmul=locator(1)


plot(c(-1,1),c(0,3), type="n", main="beta.c.adj[2]")
apply(SArray[,,"beta.c.adj[2]"], 2, function(x)lines(density(x)))

